{"version":3,"sources":["app.js"],"names":["header","document","querySelector","menu","buttonMenu","sections","querySelectorAll","form","loader","modal","closeModal","classList","remove","showModal","object","innerHTML","type","heading","icon","message","add","formSendEmail","addEventListener","e","preventDefault","options","method","body","FormData","target","fetch","then","response","ok","json","Promise","reject","reset","catch","err","closeMenuOnWindowResize","window","innerWidth","handleNavMenuToggle","matches","toggle","toggleHeaderShadowOnScroll","scrollTop","documentElement","style","boxShadow","updateNavMenuLinkColorsOnScroll","entries","menuLinks","forEach","entry","index","Array","from","findIndex","section","isIntersecting","color","animation","setupVisibilityObserver","callback","targetElements","root","rootMargin","threshold","observer","IntersectionObserver","length","element","observe"],"mappings":"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","file":"app.js","sourcesContent":["const header = document.querySelector(\".header\");\r\nconst menu = document.querySelector(\".nav-menu\");\r\nconst buttonMenu = document.querySelector(\".nav-btn-menu\");\r\nconst sections = document.querySelectorAll(\"section\");\r\nconst form = document.querySelector(\"form\");\r\nconst loader = document.querySelector(\".loader\");\r\nconst modal = document.querySelector(\".modal\");\r\n\r\nfunction closeModal() {\r\n  modal.classList.remove(\"is-open\");\r\n}\r\n\r\nfunction showModal(object) {\r\n  modal.innerHTML = `\r\n      <div class=\"modal-box ${object.type}\">\r\n        <h3>${object.heading}</h3>\r\n        <i class=\"${object.icon}\"></i>\r\n        <p>${object.message}</p>\r\n        <button class=\"btn\" onclick=\"closeModal()\">Aceptar</button>\r\n      </div>\r\n  `;\r\n  modal.classList.add(\"is-open\");\r\n}\r\n\r\nfunction formSendEmail() {\r\n  form.addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n    loader.classList.add(\"active\");\r\n    const options = {\r\n      method: \"POST\",\r\n      body: new FormData(e.target),\r\n    };\r\n    fetch(\r\n      \"https://formsubmit.co/ajax/01fc21d7868b37ca64a808e480f3bc12\",\r\n      options\r\n    )\r\n      .then((response) =>\r\n        response.ok ? response.json() : Promise.reject(response)\r\n      )\r\n      .then((json) => {\r\n        loader.classList.remove(\"active\");\r\n        const success = {\r\n          heading: \"Exito\",\r\n          icon: \"fa-solid fa-check\",\r\n          message: \"Tu correo electrónico se ha enviado exitosamente.\",\r\n          type: \"success\",\r\n        };\r\n        showModal(success);\r\n        form.reset();\r\n      })\r\n      .catch((err) => {\r\n        loader.classList.remove(\"active\");\r\n        const error = {\r\n          heading: \"Error\",\r\n          icon: \"fa-solid fa-x\",\r\n          message:\r\n            \"Se produjo un error al enviar el correo electrónico. Por favor, inténtalo de nuevo.\",\r\n          type: \"error\",\r\n        };\r\n        showModal(error);\r\n      });\r\n  });\r\n}\r\n\r\nfunction closeMenuOnWindowResize() {\r\n  window.addEventListener(\"resize\", (e) => {\r\n    if (window.innerWidth > 1024) {\r\n      buttonMenu.classList.remove(\"is-open\");\r\n      menu.classList.remove(\"is-open\");\r\n    }\r\n  });\r\n}\r\n\r\nfunction handleNavMenuToggle() {\r\n  document.addEventListener(\"click\", (e) => {\r\n    if (\r\n      e.target.matches(\".nav-btn-menu\") ||\r\n      e.target.matches(\".nav-btn-menu svg\")\r\n    ) {\r\n      buttonMenu.classList.toggle(\"is-open\");\r\n      menu.classList.toggle(\"is-open\");\r\n    }\r\n\r\n    if (e.target.matches(\".nav-menu a\")) {\r\n      buttonMenu.classList.remove(\"is-open\");\r\n      menu.classList.remove(\"is-open\");\r\n    }\r\n  });\r\n}\r\n\r\nfunction toggleHeaderShadowOnScroll() {\r\n  window.addEventListener(\"scroll\", (e) => {\r\n    if (\r\n      document.body.scrollTop > 80 ||\r\n      document.documentElement.scrollTop > 80\r\n    ) {\r\n      header.style.boxShadow = \"0px 1px 6px var(--box-shadow-color)\";\r\n    } else {\r\n      header.style.boxShadow = \"none\";\r\n    }\r\n  });\r\n\r\n  if (document.body.scrollTop > 80 || document.documentElement.scrollTop > 80) {\r\n    header.style.boxShadow = \"0px 1px 6px var(--box-shadow-color)\";\r\n  } else {\r\n    header.style.boxShadow = \"none\";\r\n  }\r\n}\r\n\r\nfunction updateNavMenuLinkColorsOnScroll(entries) {\r\n  const menuLinks = document.querySelectorAll(\".nav-menu a\");\r\n  entries.forEach((entry) => {\r\n    const index = Array.from(sections).findIndex(\r\n      (section) => section === entry.target\r\n    );\r\n    if (entry.isIntersecting) {\r\n      menuLinks[index].style.color = \"var(--primary-color)\";\r\n      switch (entry.target) {\r\n        case sections[0]:\r\n          sections[0].querySelector(\".featured-image\").style.animation =\r\n            \"slideRight var(--transition-long) var(--transition-delay) forwards\";\r\n          sections[0].querySelector(\".featured-text\").style.animation =\r\n            \"slideLeft var(--transition-long) var(--transition-delay) forwards\";\r\n          break;\r\n        case sections[1]:\r\n          sections[1].querySelector(\".row\").style.animation =\r\n            \"slideUp var(--transition-long) var(--transition-delay) forwards\";\r\n          break;\r\n        case sections[2]:\r\n          sections[2].querySelector(\".project-container\").style.animation =\r\n            \"slideUp var(--transition-long) var(--transition-delay) forwards\";\r\n          break;\r\n        case sections[3]:\r\n          sections[3].querySelector(\".row\").style.animation =\r\n            \"slideUp var(--transition-long) var(--transition-delay) forwards\";\r\n          break;\r\n      }\r\n    } else {\r\n      menuLinks[index].style.color = \"\";\r\n    }\r\n  });\r\n}\r\n\r\nfunction setupVisibilityObserver(callback, targetElements) {\r\n  let options = {\r\n    root: document.querySelector(\"#scrollArea\"),\r\n    rootMargin: \"0px\",\r\n    threshold: 0.5,\r\n  };\r\n\r\n  let observer = new IntersectionObserver(callback, options);\r\n  if (targetElements.length > 1) {\r\n    targetElements.forEach((element) => {\r\n      observer.observe(element);\r\n    });\r\n  } else {\r\n    observer.observe(targetElements);\r\n  }\r\n}\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\", () => {\r\n  setupVisibilityObserver(updateNavMenuLinkColorsOnScroll, sections);\r\n  toggleHeaderShadowOnScroll();\r\n  handleNavMenuToggle();\r\n  closeMenuOnWindowResize();\r\n  formSendEmail();\r\n});\r\n"]}